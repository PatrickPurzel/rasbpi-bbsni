version: '3.3'
services:

  probe:
    container_name: probe
    build:
      context: ./raspi-gpio
      dockerfile: Dockerfile 
    privileged: true
    restart: unless-stopped
    depends_on:
      - "db"
    volumes:
      - /dev/gpiomem:/dev/gpiomem
      - /dev/mem:/dev/mem
    networks:
    - python-network

  web:
    image: nginx
    container_name: frontend
    restart: unless-stopped
    volumes:
      - ./site-content:/usr/share/nginx/html
    ports:
      - "8080:80"
    environment:
      - NGINX_PORT=80
    networks:
      - python-network 

 
  db:
    image: hypriot/rpi-mysql
    restart: unless-stopped    
    container_name: sysman-db
    environment:
      MYSQL_DATABASE: 'test_database'
      # So you don't have to use root, but you can if you like
      MYSQL_USER: 'user'
      # You can use whatever password you like
      MYSQL_PASSWORD: 'password'
      # Password for root access
      MYSQL_ROOT_PASSWORD: 'password'
    ports:
      # <Port exposed> : < MySQL Port running inside container>
      - '33306:3306'
    volumes:
      # Where our data will be persisted
      - my-db:/var/lib/mysql
    networks:
      - python-network  
 
 
  mosquitto:
    image: eclipse-mosquitto
    container_name: mosquitto
    restart: unless-stopped
    ports:
      - "1883:1883"
    volumes:
      - ./mqtt-broker/conf:/mosquitto/config
      - ./mqtt-broker/data:/mosquitto/data
      - ./mqtt-broker/log:/mosquitto/log
    networks:
      - python-network

  grafana:
    image: grafana/grafana-oss
    container_name: my-grafana
    environment:
      - GF_DEFAULT_INSTANCE_NAME=my-grafana
      - GF_SERVER_DOMAIN=my-grafana

      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin

      - GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_SECURITY_ALLOW_EMBEDDING=true
    ports:
      - 9000:3000
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - python-network
  # Explicitly define the persistent volume for your data storage

# Names our volume
volumes:
  my-db:
  grafana-data:

networks:
  python-network:
    driver: bridge